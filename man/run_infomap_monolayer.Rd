% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_infomap_monolayer.R
\name{run_infomap_monolayer}
\alias{run_infomap_monolayer}
\title{Run Infomap for monolayer networks with an option to compare to randomized
networks}
\usage{
run_infomap_monolayer(
  x,
  infomap_executable = "Infomap",
  flow_model = NULL,
  silent = F,
  trials = 100,
  two_level = T,
  seed = 123,
  signif = F,
  shuff_method = NULL,
  nsim = 1000,
  verbose = T,
  ...
)
}
\arguments{
\item{x}{An object of class \code{monolayer}.}

\item{infomap_executable}{Name of Infomap standalone file.}

\item{flow_model}{See details
\href{https://www.mapequation.org/infomap/#ParamsAlgorithm}{here}.}

\item{silent}{Run in silent mode (argumnt --silent in Infomap).}

\item{trials}{Number of trials to run (argumnt -N in Infomap).}

\item{two_level}{Do not use hierarchical partitioning (argumnt -2 in
Infomap). See details.}

\item{seed}{Seed value for random number generation (argumnt --seed in
Infomap).}

\item{signif}{Should a comparison for non-random versions of the network be
performed?}

\item{shuff_method}{Method to shuffle the network. See details.}

\item{nsim}{How many shuffled networks to create?}

\item{...}{additional Infomap arguments as detailed
\href{https://www.mapequation.org/infomap/#Parameters}{here}.}
}
\value{
An object of class \code{infomap_monolayer}.
}
\description{
Run Infomap for monolayer networks. Returns the value of the map equation (L)
and a tibble with modules that includes additional node metadata (if exists).
Can also compare L_obs to that obtained from shuffled versions of the
network.
}
\details{
All of Infomap's arguments are detailed in
  \href{https://www.mapequation.org/infomap/#Parameters}{https://www.mapequation.org/infomap/#Parameters}.


  Note on hierarchical partitioning: In Infomaps tree output, the \code{path}
  column is a tree-like format, like that: 1:3:4:2. The first integer is the top module. The last integer after
  the colon indicates the ID of the leaf in the module, and not the ID of the
  node. In this example, the node is the 2nd leaf in module 4, which is nested
  in module 3, which is nested in top module 1. \code{run_infomap_monolayer}
  automatically parses this output to levels. In this example, there are 3
  module levels and the last is the leaf level. This will create columns:
  \code{module_level1, module_level2, module_level3, module_level4}. The
  column \code{levels} will show 3 because it ignores the leaf level. In case
  a node has fewer levels because its node is not partitioned, then the
  missing levels will show an NA value. A second
  node in the same network with a path 2:1:5 will be the 5th leaf in module 1
  of module 2. The values for this node will be: \code{module_level1=2,
  module_level2=1, module_level3=5, module_level4=NA}.

  If significance is \code{TRUE} then the network will be shuffled according
  to \code{shuff_method}. \code{shuff_method} can be either a list of already
  shuffled networks, produced for example with \code{shuffle_infomap}, or a
  shuffling method from \code{vegan::commsim}. Currently only supports
  shuffling for bipartite networks from the vegan package as defined in
  \code{vegan::commsim}. If special arguments such as burnin or thinin are
  needed for shuffling (e.g., for sequential algorithms), then first run
  \code{shuffle_infomap} separtely and provide the result as a list to
  \code{shuff_method}. This is because the ... argument passes additional
  arguments to Infomap, and not to \code{shuffle_infomap}. Significance is
  estimate as a 1-tailed test:

  P_value = sum(L_sim<L)/nsim

  This is the same common method to calculate significance for modularity,
  only that the goal is to minimize the map equation.

  x is an object of class monolayer that is internally converted to an object of class \code{infomap_link_list}.
}
\note{
This is a beta version, that should eventually replace
  \code{run_infomap_monolayer}.
}
\seealso{
\code{create_monolayer_object, monolayer, shuffle_infomap, infomap_monolayer}
}

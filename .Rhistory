# slice(c(0,seq(8,365,by=7))) %>% # Only pick weeks
gather(key = 'State', value=N, -time) %>%
ggplot(aes(time, N, color=State))+geom_line()+geom_point()+
scale_color_manual(values = c('#c91212','dark green','orange'))
# scale_y_continuous(limits = c(0,300))+
# scale_x_continuous(limits = c(0,8))
# Plot model results with real cases
as_tibble(output) %>%
mutate(running_day=row_number()-1) %>%
left_join(covid19_country('Israel'), 'running_day') %>%
dplyr::select(time, S.N, I, R, cases) %>%
gather(key = 'State', value=N, -time) %>%
ggplot(aes(time, N, color=State))+geom_line()+
geom_point()+
# scale_x_continuous(limits = c(0,12))+scale_y_continuous(limits = c(0,300))+
scale_color_manual(values = c('blue','#c91212','dark green','orange'))
# Plot model results with real cases
as_tibble(output) %>%
mutate(running_day=row_number()-1) %>%
left_join(covid19_country('Israel'), 'running_day') %>%
dplyr::select(time, S.N, I, R, cases) %>%
gather(key = 'State', value=N, -time) %>%
ggplot(aes(time, N, color=State))+geom_line()+
geom_point()+
scale_x_continuous(limits = c(0,12))+scale_y_continuous(limits = c(0,300))+
scale_color_manual(values = c('blue','#c91212','dark green','orange'))
R0 <- R0_country('Spain')
R0
beta=R0$R*gamma # beta=R0*gamma
times = seq(0, 52, by = 1/7) # 52 weeks with 1-day time-increments per week
parms = c(mu = 0, # No births/deaths
N = 8*10^6, # 8 million people in Israel
beta = beta,
gamma = gamma # infectious period of 2 weeks
)
# start = c(S = 0.9999*parms['N'], I = 0.0001*parms['N'], R = 0)
start = c(S = parms['N']-1, I=1, R = 0)
output <- ode(y = start, times = times, func = sirmod, parms = parms)
output=as.data.frame(output)
# Plot model results
output %>%
# slice(c(0,seq(8,365,by=7))) %>% # Only pick weeks
gather(key = 'State', value=N, -time) %>%
ggplot(aes(time, N, color=State))+geom_line()+geom_point()+
scale_color_manual(values = c('#c91212','dark green','orange'))
# Plot model results with real cases
as_tibble(output) %>%
mutate(running_day=row_number()-1) %>%
left_join(covid19_country('Spain'), 'running_day') %>%
dplyr::select(time, S.N, I, R, cases) %>%
gather(key = 'State', value=N, -time) %>%
ggplot(aes(time, N, color=State))+geom_line()+
geom_point()+
scale_x_continuous(limits = c(0,12))+scale_y_continuous(limits = c(0,300))+
scale_color_manual(values = c('blue','#c91212','dark green','orange'))
# Plot model results with real cases
as_tibble(output) %>%
mutate(running_day=row_number()-1) %>%
left_join(covid19_country('Spain'), 'running_day') %>%
dplyr::select(time, S.N, I, R, cases) %>%
gather(key = 'State', value=N, -time) %>%
ggplot(aes(time, N, color=State))+geom_line()+
geom_point()+
# scale_x_continuous(limits = c(0,12))+scale_y_continuous(limits = c(0,300))+
scale_color_manual(values = c('blue','#c91212','dark green','orange'))
R0 <- R0_country('Italy')
beta=R0$R*gamma # beta=R0*gamma
times = seq(0, 52, by = 1/7) # 52 weeks with 1-day time-increments per week
parms = c(mu = 0, # No births/deaths
N = 8*10^6, # 8 million people in Israel
beta = beta,
gamma = gamma # infectious period of 2 weeks
)
# start = c(S = 0.9999*parms['N'], I = 0.0001*parms['N'], R = 0)
start = c(S = parms['N']-1, I=1, R = 0)
output <- ode(y = start, times = times, func = sirmod, parms = parms)
output=as.data.frame(output)
# Plot model results
output %>%
# slice(c(0,seq(8,365,by=7))) %>% # Only pick weeks
gather(key = 'State', value=N, -time) %>%
ggplot(aes(time, N, color=State))+geom_line()+geom_point()+
scale_color_manual(values = c('#c91212','dark green','orange'))
# Plot model results with real cases
as_tibble(output) %>%
mutate(running_day=row_number()-1) %>%
left_join(covid19_country('Italy'), 'running_day') %>%
dplyr::select(time, S.N, I, R, cases) %>%
gather(key = 'State', value=N, -time) %>%
ggplot(aes(time, N, color=State))+geom_line()+
geom_point()+
# scale_x_continuous(limits = c(0,12))+scale_y_continuous(limits = c(0,300))+
scale_color_manual(values = c('blue','#c91212','dark green','orange'))
# Plot model results with real cases
as_tibble(output) %>%
mutate(running_day=row_number()-1) %>%
left_join(covid19_country('Italy'), 'running_day') %>%
dplyr::select(time, S.N, I, R, cases) %>%
gather(key = 'State', value=N, -time) %>%
ggplot(aes(time, N, color=State))+geom_line()+
geom_point()+
scale_x_continuous(limits = c(0,12))+scale_y_continuous(limits = c(0,300))+
scale_color_manual(values = c('blue','#c91212','dark green','orange'))
# Plot model results with real cases
as_tibble(output) %>%
mutate(running_day=row_number()-1) %>%
left_join(covid19_country('Italy'), 'running_day') %>%
dplyr::select(time, S.N, I, R, cases) %>%
gather(key = 'State', value=N, -time) %>%
ggplot(aes(time, N, color=State))+geom_line()+
geom_point()+
scale_x_continuous(limits = c(0,12))+
# scale_y_continuous(limits = c(0,300))+
scale_color_manual(values = c('blue','#c91212','dark green','orange'))
# Plot model results with real cases
as_tibble(output) %>%
mutate(running_day=row_number()-1) %>%
left_join(covid19_country('Italy'), 'running_day') %>%
dplyr::select(time, S.N, I, R, cases) %>%
gather(key = 'State', value=N, -time) %>%
ggplot(aes(time, N, color=State))+geom_line()+
geom_point()+
# scale_x_continuous(limits = c(0,12))+
# scale_y_continuous(limits = c(0,300))+
scale_color_manual(values = c('blue','#c91212','dark green','orange'))
parms = c(mu = 0, # No births/deaths
N = 1, # 8 million people in Israel
beta = beta,
gamma = gamma # infectious period of 2 weeks
)
start = c(S = 0.9999*parms['N'], I = 0.0001*parms['N'], R = 0)
output <- ode(y = start, times = times, func = sirmod, parms = parms)
output=as.data.frame(output)
# Plot model results
output %>%
# slice(c(0,seq(8,365,by=7))) %>% # Only pick weeks
gather(key = 'State', value=N, -time) %>%
ggplot(aes(time, N, color=State))+geom_line()+geom_point()+
scale_color_manual(values = c('#c91212','dark green','orange'))
# Plot model results with real cases
as_tibble(output) %>%
mutate(running_day=row_number()-1) %>%
left_join(covid19_country('Italy'), 'running_day') %>%
dplyr::select(time, S.N, I, R, cases) %>%
gather(key = 'State', value=N, -time) %>%
ggplot(aes(time, N, color=State))+geom_line()+
geom_point()+
# scale_x_continuous(limits = c(0,12))+
# scale_y_continuous(limits = c(0,300))+
scale_color_manual(values = c('blue','#c91212','dark green','orange'))
R0_country <- function(the_country){
# Estimate R0 from data
mGT<-generation.time("gamma", c(1, 1.5))
x <- covid19_country(the_country)
y <- x$cases
names(y) <- x$date
R0 <- est.R0.EG(y, mGT)
R0
}
Tr <- 12 # Time to recovery in days
gamma=1/(Tr/7) # Tr in weeks
R0 <- R0_country('Israel')
beta=R0$R*gamma # beta=R0*gamma
times = seq(0, 52, by = 1/7) # 52 weeks with 1-day time-increments per week
R0
times = seq(0, 52, by = 1/7) # 52 weeks with 1-day time-increments per week
parms = c(mu = 0, # No births/deaths
N = 8*10^6, # 8 million people in Israel
beta = beta,
gamma = gamma # infectious period of 2 weeks
)
# start = c(S = 0.9999*parms['N'], I = 0.0001*parms['N'], R = 0)
start = c(S = parms['N']-1, I=1, R = 0)
output <- ode(y = start, times = times, func = sirmod, parms = parms)
output=as.data.frame(output)
# Plot model results
output %>%
# slice(c(0,seq(8,365,by=7))) %>% # Only pick weeks
gather(key = 'State', value=N, -time) %>%
ggplot(aes(time, N, color=State))+geom_line()+geom_point()+
scale_color_manual(values = c('#c91212','dark green','orange'))
# Plot model results with real cases
as_tibble(output) %>%
mutate(running_day=row_number()-1) %>%
left_join(covid19_country('Italy'), 'running_day') %>%
dplyr::select(time, S.N, I, R, cases) %>%
gather(key = 'State', value=N, -time) %>%
ggplot(aes(time, N, color=State))+geom_line()+
geom_point()+
# scale_x_continuous(limits = c(0,12))+
# scale_y_continuous(limits = c(0,300))+
scale_color_manual(values = c('blue','#c91212','dark green','orange'))
# Plot model results with real cases
as_tibble(output) %>%
mutate(running_day=row_number()-1) %>%
left_join(covid19_country('Italy'), 'running_day') %>%
dplyr::select(time, S.N, I, R, cases) %>%
gather(key = 'State', value=N, -time) %>%
ggplot(aes(time, N, color=State))+geom_line()+
geom_point()+
scale_x_continuous(limits = c(0,12))+
scale_y_continuous(limits = c(0,300))+
scale_color_manual(values = c('blue','#c91212','dark green','orange'))
# Plot model results with real cases
as_tibble(output) %>%
mutate(running_day=row_number()-1) %>%
left_join(covid19_country('Israel'), 'running_day') %>%
dplyr::select(time, S.N, I, R, cases) %>%
gather(key = 'State', value=N, -time) %>%
ggplot(aes(time, N, color=State))+geom_line()+
geom_point()+
scale_x_continuous(limits = c(0,12))+
scale_y_continuous(limits = c(0,300))+
scale_color_manual(values = c('blue','#c91212','dark green','orange'))
R0_country <- function(the_country){
# Estimate R0 from data
mGT<-generation.time("gamma", c(3, 1.5))
x <- covid19_country(the_country)
y <- x$cases
names(y) <- x$date
R0 <- est.R0.EG(y, mGT)
R0
}
library(tidyverse)
library(lubridate)
library(deSolve)
# Get data
setwd('~/GitHub/COVID-19/csse_covid_19_data/csse_covid_19_time_series/')
covid19 <- read_csv('time_series_19-covid-Confirmed.csv')
covid19 %<>%
select(-'Province/State', -Lat, -Long) %>%
rename(country=`Country/Region`) %>%
gather(key=d, value, -country) %>%
# filter(country=='Australia', d=='2/2/20') %>% # for checking that the grouping is correct
group_by(country, d) %>%
summarise(cases=sum(value)) %>%
separate(d, into=c('month','day','year')) %>%
mutate(date=as_date(paste(year,month,day,sep='-'))) %>%
arrange(country,date)
# Get data
setwd('~/GitHub/COVID-19/csse_covid_19_data/csse_covid_19_time_series/')
covid19 <- read_csv('time_series_19-covid-Confirmed.csv')
covid19 %<>%
select(-'Province/State', -Lat, -Long) %>%
rename(country=`Country/Region`) %>%
gather(key=d, value, -country) %>%
# filter(country=='Australia', d=='2/2/20') %>% # for checking that the grouping is correct
group_by(country, d) %>%
summarise(cases=sum(value)) %>%
separate(d, into=c('month','day','year')) %>%
mutate(date=as_date(paste(year,month,day,sep='-'))) %>%
arrange(country,date)
# Get data
setwd('~/GitHub/COVID-19/csse_covid_19_data/csse_covid_19_time_series/')
covid19 <- read_csv('time_series_19-covid-Confirmed.csv')
covid19
covid19 %<>%
select(-'Province/State', -Lat, -Long)
library(tidyverse)
library(magrittr)
library(lubridate)
library(deSolve)
# Get data
setwd('~/GitHub/COVID-19/csse_covid_19_data/csse_covid_19_time_series/')
covid19 <- read_csv('time_series_19-covid-Confirmed.csv')
covid19 %<>%
select(-'Province/State', -Lat, -Long) %>%
rename(country=`Country/Region`) %>%
gather(key=d, value, -country) %>%
# filter(country=='Australia', d=='2/2/20') %>% # for checking that the grouping is correct
group_by(country, d) %>%
summarise(cases=sum(value)) %>%
separate(d, into=c('month','day','year')) %>%
mutate(date=as_date(paste(year,month,day,sep='-'))) %>%
arrange(country,date)
library(tidyverse)
library(magrittr)
library(lubridate)
library(deSolve)
# Get data
setwd('~/GitHub/COVID-19/csse_covid_19_data/csse_covid_19_time_series/')
covid19 <- read_csv('time_series_19-covid-Confirmed.csv')
covid19 %<>%
select(-'Province/State', -Lat, -Long)
covid19 <- read_csv('time_series_19-covid-Confirmed.csv')
covid19 %<>%
select(-`Province/State`, -Lat, -Long) %>%
rename(country=`Country/Region`) %>%
gather(key=d, value, -country) %>%
# filter(country=='Australia', d=='2/2/20') %>% # for checking that the grouping is correct
group_by(country, d) %>%
summarise(cases=sum(value)) %>%
separate(d, into=c('month','day','year')) %>%
mutate(date=as_date(paste(year,month,day,sep='-'))) %>%
arrange(country,date)
covid19 <- read_csv('time_series_19-covid-Confirmed.csv')
covid19 %<>%
dplyr::select(-`Province/State`, -Lat, -Long) %>%
rename(country=`Country/Region`) %>%
gather(key=d, value, -country) %>%
# filter(country=='Australia', d=='2/2/20') %>% # for checking that the grouping is correct
group_by(country, d) %>%
summarise(cases=sum(value)) %>%
separate(d, into=c('month','day','year')) %>%
mutate(date=as_date(paste(year,month,day,sep='-'))) %>%
arrange(country,date)
# Define functions
covid19_country <- function(the_country){
x <- covid19%>%
filter(country==the_country) %>%
mutate(running_day=row_number())
return(x)
}
R0_country <- function(the_country){
# Estimate R0 from data
mGT<-generation.time("gamma", c(3, 1.5))
x <- covid19_country(the_country)
y <- x$cases
names(y) <- x$date
R0 <- est.R0.EG(y, mGT)
R0
}
# Some exploratory analysis
covid19 %>%
filter(country=='Spain' | country=='Israel' | country=='China') %>%
ggplot(aes(date, cases, color=country))+
facet_wrap(~country, scales='free')+
geom_point()+
geom_line()+
theme_bw()+
theme(legend.position = 'none')+
scale_color_manual(values = c('red','blue','orange'))
ggplot(covid19_country('Israel'), aes(date, cases))+
geom_point()+
geom_line()+
theme_bw()+
labs(title = 'Reported COVID19 cases in Israel')
# SIR modeling
sirmod = function(t, y, parms) {
# Pull state variables from y vector
S = y[1]
I = y[2]
R = y[3]
# Pull parameter values from parms vector
beta = parms["beta"]
mu = parms["mu"]
gamma = parms["gamma"]
N = parms["N"]
# Define equations
dS = mu * (N - S) - beta * S * I/N
dI = beta * S * I/N - (mu + gamma) * I
dR = gamma * I - mu * R
res = c(dS, dI, dR)
# Return list of gradients
list(res)
}
Tr <- 12 # Time to recovery in days
gamma=1/(Tr/7) # Tr in weeks
R0 <- R0_country('Israel')
R0
beta=R0$R*gamma # beta=R0*gamma
times = seq(0, 52, by = 1/7) # 52 weeks with 1-day time-increments per week
parms = c(mu = 0, # No births/deaths
N = 8*10^6, # 8 million people in Israel
beta = beta,
gamma = gamma # infectious period of 2 weeks
)
# start = c(S = 0.9999*parms['N'], I = 0.0001*parms['N'], R = 0)
start = c(S = parms['N']-1, I=1, R = 0)
output <- ode(y = start, times = times, func = sirmod, parms = parms)
output=as.data.frame(output)
# Plot model results
output %>%
# slice(c(0,seq(8,365,by=7))) %>% # Only pick weeks
gather(key = 'State', value=N, -time) %>%
ggplot(aes(time, N, color=State))+geom_line()+geom_point()+
scale_color_manual(values = c('#c91212','dark green','orange'))
# Plot model results with real cases
as_tibble(output) %>%
mutate(running_day=row_number()-1) %>%
left_join(covid19_country('Israel'), 'running_day') %>%
dplyr::select(time, S.N, I, R, cases) %>%
gather(key = 'State', value=N, -time) %>%
ggplot(aes(time, N, color=State))+geom_line()+
geom_point()+
scale_x_continuous(limits = c(0,12))+
scale_y_continuous(limits = c(0,300))+
scale_color_manual(values = c('blue','#c91212','dark green','orange'))
Tr <- 14 # Time to recovery in days
gamma=1/(Tr/7) # Tr in weeks
R0 <- R0_country('Israel')
R0
beta=R0$R*gamma # beta=R0*gamma
times = seq(0, 52, by = 1/7) # 52 weeks with 1-day time-increments per week
parms = c(mu = 0, # No births/deaths
N = 8*10^6, # 8 million people in Israel
beta = beta,
gamma = gamma # infectious period of 2 weeks
)
# start = c(S = 0.9999*parms['N'], I = 0.0001*parms['N'], R = 0)
start = c(S = parms['N']-1, I=1, R = 0)
output <- ode(y = start, times = times, func = sirmod, parms = parms)
output=as.data.frame(output)
# Plot model results
output %>%
# slice(c(0,seq(8,365,by=7))) %>% # Only pick weeks
gather(key = 'State', value=N, -time) %>%
ggplot(aes(time, N, color=State))+geom_line()+geom_point()+
scale_color_manual(values = c('#c91212','dark green','orange'))
# Plot model results with real cases
as_tibble(output) %>%
mutate(running_day=row_number()-1) %>%
left_join(covid19_country('Israel'), 'running_day') %>%
dplyr::select(time, S.N, I, R, cases) %>%
gather(key = 'State', value=N, -time) %>%
ggplot(aes(time, N, color=State))+geom_line()+
geom_point()+
scale_x_continuous(limits = c(0,12))+
scale_y_continuous(limits = c(0,300))+
scale_color_manual(values = c('blue','#c91212','dark green','orange'))
beta
parms = c(mu = 0, # No births/deaths
N = 8*10^6, # 8 million people in Israel
beta = 0.8,
gamma = gamma, # infectious period of 2 weeks
a = a # average incubation period
)
start = c(S = parms['N']-1, E=0, I=1, R = 0)
output = ode(y = start, times = times, func = seirmod, parms = parms)
output=as.data.frame(output)
# Plot model results
output %>%
# slice(c(0,seq(8,365,by=7))) %>% # Only pick weeks
gather(key = 'State', value=N, -time) %>%
ggplot(aes(time, N, color=State))+geom_line()+geom_point()+
scale_color_manual(values = c('black', '#c91212','dark green','orange'))
parms = c(mu = 0, # No births/deaths
N = 8*10^6, # 8 million people in Israel
beta = 0.8,
gamma = gamma # infectious period of 2 weeks
)
# start = c(S = 0.9999*parms['N'], I = 0.0001*parms['N'], R = 0)
start = c(S = parms['N']-1, I=1, R = 0)
output <- ode(y = start, times = times, func = sirmod, parms = parms)
output=as.data.frame(output)
# Plot model results
output %>%
# slice(c(0,seq(8,365,by=7))) %>% # Only pick weeks
gather(key = 'State', value=N, -time) %>%
ggplot(aes(time, N, color=State))+geom_line()+geom_point()+
scale_color_manual(values = c('#c91212','dark green','orange'))
parms = c(mu = 0, # No births/deaths
N = 8*10^6, # 8 million people in Israel
beta = beta,
gamma = gamma # infectious period of 2 weeks
)
# start = c(S = 0.9999*parms['N'], I = 0.0001*parms['N'], R = 0)
start = c(S = parms['N']-1, I=1, R = 0)
output <- ode(y = start, times = times, func = sirmod, parms = parms)
output=as.data.frame(output)
# Plot model results
output %>%
# slice(c(0,seq(8,365,by=7))) %>% # Only pick weeks
gather(key = 'State', value=N, -time) %>%
ggplot(aes(time, N, color=State))+geom_line()+geom_point()+
scale_color_manual(values = c('#c91212','dark green','orange'))
pharmaco <- function(t, blood, p) {
dblood <- - b * blood
list(dblood)
}
b <- 0.6
yini <- c(blood = 0)
injectevents <- data.frame(var = "blood",
time = 0:20,
value = 40,
method = "add")
head(injectevents)
times <- seq(from = 0, to = 10, by = 1/24)
outDrug <- ode(func = pharmaco, times = times, y = yini,
parms = NULL, method = "impAdams",
events = list(data = injectevents))
outDrug
plot(outDrug)
injectevents <- data.frame(var = "b",
time = 0:20,
value = 0.1,
method = "add")
head(injectevents)
times <- seq(from = 0, to = 10, by = 1/24)
outDrug <- ode(func = pharmaco, times = times, y = yini,
parms = NULL, method = "impAdams",
events = list(data = injectevents))
shiny::runApp('~/GitHub/covid')
knitr::opts_chunk$set(echo = FALSE)
library(R0)
# Plot model results with real cases
as_tibble(output) %>%
mutate(running_day=row_number()-1) %>%
left_join(covid19_country('Israel'), 'running_day') %>%
dplyr::select(time, S.N, I, R, cases) %>%
gather(key = 'State', value=N, -time) %>%
ggplot(aes(time, N, color=State))+geom_line()+
geom_point()+
scale_x_continuous(limits = c(0,12))+
scale_y_continuous(limits = c(0,300))+
scale_color_manual(values = c('blue','#c91212','dark green','orange'))
# Plot model results
output %>%
# slice(c(0,seq(8,365,by=7))) %>% # Only pick weeks
gather(key = 'State', value=N, -time) %>%
ggplot(aes(time, N, color=State))+geom_line()+geom_point()+
scale_color_manual(values = c('#c91212','dark green','orange'))
